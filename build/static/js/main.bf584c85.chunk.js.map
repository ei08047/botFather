{"version":3,"sources":["logo.svg","AppBar.js","Avatar.js","DataEntry.js","Icon.js","About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Typography","variant","display","margin","large","width","height","ImageAvatars","Avatar","alt","src","DataEntry","props","console","log","handleChange","bind","state","Grid","container","item","xs","align","this","year","role","href","place","gutterBottom","description","React","Component","Icon","target","s","path","maxWidth","backgroundColor","palette","background","paper","chip","section1","section2","section3","MiddleDividers","alignItems","Divider","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf584c85.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            BotFather\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  large: {\n    width: theme.spacing(20),\n    height: theme.spacing(20),\n  },\n}));\n\nexport default function ImageAvatars() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Avatar alt=\"Jose Ferreira\" src=\"/static/images/avatar/me.jpg\" className={classes.large}/>\n    </div>\n  );\n}","import Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\n\n\nclass DataEntry extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props)\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n    };\n  }\n\n\n  render() {\n    return (\n      <Grid container spacing={3}>\n      <Grid item xs={4}>\n        <Typography align=\"left\" variant=\"body1\" display=\"inline\">\n          {this.props.year} \n        </Typography>\n        </Grid>\n\n      <Grid item xs={4}>\n        <Typography align=\"center\" variant=\"body1\" display=\"inline\" >\n          {this.props.role} \n        </Typography>\n        </Grid>\n\n        <Grid item xs={4}>\n          <a href=\"https://www.inesctec.pt/en\">\n            <Typography align=\"center\" variant=\"body1\" display=\"inline\" >\n               {this.props.place}\n            </Typography>\n          </a>\n        </Grid>\n\n      <Grid item xs={12}>\n        <Typography gutterBottom variant=\"subtitle1\" color=\"secondary\">\n          {this.props.description}\n        </Typography>\n        </Grid>\n\n      </Grid>\n    );\n  }\n}\n\nexport default DataEntry;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\n\n\nclass Icon extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props)\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n    // Subscribe to changes\n\n  }\n\n  componentWillUnmount() {\n    // Clean up listener\n  }\n\n  handleChange() {\n    // Update component state whenever the data source changes\n\n  }\n\n  render() {\n    return (\n    \t<a target=\"_blank\"s href=\"https://www.google.com\" >\n <img src={this.props.path} width=\"25\" height=\"25\"/>\n </a>\n    );\n  }\n}\n\nexport default Icon;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport ImageAvatars from './Avatar.js'\nimport DataEntry from './DataEntry.js'\nimport Icon from './Icon.js'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 3600,\n    backgroundColor: theme.palette.background.paper,\n  },\n  chip: {\n    marginRight: theme.spacing(1),\n  },\n  section1: {\n    margin: theme.spacing(3, 2),\n  },\n  section2: {\n    margin: theme.spacing(2),\n  },\n  section3: {\n    margin: theme.spacing(3, 1, 1),\n  },\n}));\n\nexport default function MiddleDividers() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.section1}>\n        <Grid container alignItems=\"center\">\n\n          <Grid item>\n          <div>\n            <Typography gutterBottom variant=\"h6\">\n              Jos√© Ferreira\n            </Typography>\n            <Icon  path={\"\\/static\\/icons\\/linkedin.svg\"}/>\n            <Icon path={\"\\/static\\/icons\\/github.svg\"}/>\n            </div>\n\n          </Grid>\n            <Grid item xs>\n              <ImageAvatars />\n          </Grid>\n        </Grid>\n        <Typography color=\"textSecondary\" variant=\"body2\">\nSoftware Engineer | Data Scientist | Digital Artist\n        </Typography>\n      </div>\n      <Divider variant=\"middle\" />\n      <div className={classes.section2}>\n        <Typography align=\"left\" gutterBottom variant=\"h4\">\n          Profile\n        </Typography>\n\n      </div>\n      <Divider variant=\"middle\" />\n      <div className={classes.section3}>\n        <Typography align=\"left\" gutterBottom variant=\"h4\">\n          Work Experience\n        </Typography>\n        <DataEntry year={2018} role={\"research assistant\"} place={\"INESC TEC\"} description={\"bla\"}/>\n        <DataEntry year={2018} role={\"fullstack developer\"} place={\"Universal Portugal\"} description={\"bla\"}/>\n      </div>\n      <Divider variant=\"middle\" />\n            <div className={classes.section3}>\n        <Typography align=\"left\" gutterBottom variant=\"h4\">\n          Education\n        </Typography >\n        <DataEntry year={2018} role={\"\"} place={\"FEUP\"} description={\"bla\"}/>\n        <DataEntry year={2018} role={\"\"} place={\"FEUP\"} description={\"bla\"}/>\n      </div>\n            <Divider variant=\"middle\" />\n            <div className={classes.section3}>\n        <Typography gutterBottom align=\"left\" variant=\"h4\">\n          Skills\n        </Typography>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ButtonAppBar from './AppBar.js'\nimport MiddleDividers from './About.js'\nfunction App() {\n  return (\n\n\n    <div className=\"App\">\n        <ButtonAppBar />\n        <MiddleDividers />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}